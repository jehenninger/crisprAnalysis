{
    "collab_server" : "",
    "contents" : "trimReadsAndAlign <- function() {\n  \n  # Load genome file name\n  genome_file <- \"E:\\\\zon_lab\\\\Sequencing\\\\MGH_SEQUENCING\\\\custom_genome\\\\Jon-20.fa\"\n  # genome_file <- choose.files(caption = \"Select indexed genome file...\", multi = FALSE,\n  #                             filters = c(\"Fasta file (*.fa)\",\"*.fa\"))\n  genome_file_no_ext <- tools::file_path_sans_ext(genome_file)\n  \n  #Load sample fastq file names and get directory\n  fq_fnames <- choose.files(caption = \"Select sample fastq files...\",\n                            filters = c(\"Fastq file (*.fastq)\",\"*.fastq\"))\n  fq_dir <- gsub(\"/\",\"\\\\\\\\\",dirname(fq_fnames[1]))\n  fq_basename <- basename(fq_dir)\n  fq_dir_parent <- gsub(\"/\",\"\\\\\\\\\",dirname(fq_dir))\n  fq_fnames <- basename(fq_fnames)\n  \n  \n  if(dir.exists(file.path(fq_dir_parent,\"trimmed_fastq\"))) {\n    trimmed_fastq_dir <- file.path(fq_dir_parent,\"trimmed_fastq\",fsep=\"\\\\\")\n  } else {\n    dir.create(file.path(fq_dir_parent,\"trimmed_fastq\"))\n    trimmed_fastq_dir <- file.path(fq_dir_parent,\"trimmed_fastq\",fsep=\"\\\\\")\n  }\n  \n  #Generate file names for trimmed fastq files\n  fq_fnames1 <- gsub(\".fastq\",\".trimmed.paired1.fastq\",fq_fnames)\n  fq_fnames1 <- file.path(trimmed_fastq_dir,fq_fnames1,fsep=\"\\\\\")\n  fq_fnames2 <- gsub(\".fastq\",\".trimmed.paired2.fastq\",fq_fnames)\n  fq_fnames2 <- file.path(trimmed_fastq_dir,fq_fnames2,fsep=\"\\\\\")\n  \n  fq_fnames_full <- file.path(fq_dir_parent,fq_basename,fq_fnames,fsep=\"\\\\\")\n  \n  #Trim fastq by quality using bbduk method\n  percent_quality_reads = NULL\n  for(i in 1:length(fq_fnames)) {\n    cmd <- paste0(\"java -ea -Xmx100m -cp C:\\\\Users\\\\Jon\\\\bioinformatics_tools\\\\bbmap\\\\current jgi.BBDukF\", \" \",\n                  \"in=\", fq_fnames_full[i], \" \",\n                  \"out1=\", fq_fnames1[i], \" \",\n                  \"out2=\", fq_fnames2[i], \" \",\n                  \"qtrim=rl\", \" \",\n                  \"trimq=30\",\" \",\n                  \"minlen=50\",\" \",\n                  \"overwrite=t\")\n    message(cmd, \"\\n\"); system(cmd)\n    \n    #Find number of reads/percentage before and after trimming \n    origFastq <- fastqq(fq_fnames_full[i])\n    origNReads <- nReads(origFastq)/2 #divide by 2 to account for paired ends\n    \n    newFastq <- fastqq(fq_fnames1[i])\n    newNReads <- nReads(newFastq) #since the paired reads are split now, don't need to divide by 2\n    \n    percent_quality_reads[i] <- 100*newNReads/origNReads\n  }\n  \n  if(dir.exists(file.path(fq_dir_parent,\"sorted_bam\"))) {\n    sorted_bam_dir <- file.path(fq_dir_parent,\"sorted_bam\",fsep=\"\\\\\")\n  } else {\n    dir.create(file.path(fq_dir_parent,\"sorted_bam\"))\n    sorted_bam_dir <- file.path(fq_dir_parent,\"sorted_bam\",fsep=\"\\\\\")\n  }\n  \n  #Map, sort, and index the bam files\n  sm_fnames <- gsub(\".fastq\",\".paired.sam\",fq_fnames)\n  sm_fnames <- file.path(sorted_bam_dir,sm_fnames,fsep=\"\\\\\")\n  bm_fnames <- gsub(\".fastq\",\".paired.bam\",fq_fnames)\n  bm_fnames <- file.path(sorted_bam_dir,bm_fnames,fsep=\"\\\\\")\n  srt_bm_fnames <- gsub(\".paired.bam\",\".sorted.paired.bam\",bm_fnames)\n  \n  for(i in 1:length(fq_fnames)) {\n    cmd <- paste0(\"bowtie2 -x\",\" \", genome_file_no_ext,\n                  \" -1 \", fq_fnames1[i],\n                  \" -2 \", fq_fnames2[i],\n                  \" -S \", sm_fnames[i], \" \",\"--very-sensitive\",\n                  \" && samtools view -h -b \", sm_fnames[i],\n                  \" -o \", bm_fnames[i],\n                  \" && samtools sort -o \", srt_bm_fnames[i], \" \",\n                  bm_fnames[i],\n                  \" && samtools index \", srt_bm_fnames[i])\n    message(cmd, \"\\n\"); system(cmd)\n    unlink(bm_fnames[i])\n    unlink(sm_fnames[i])\n  }\n}",
    "created" : 1493824052232.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2612493973",
    "id" : "BCABA323",
    "lastKnownWriteTime" : 1493824094,
    "last_content_update" : 1493824094286,
    "path" : "~/GitHub/crisprAnalysis/bin/trimReadsAndAlign.R",
    "project_path" : "bin/trimReadsAndAlign.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}